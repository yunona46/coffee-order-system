const mongoose = require('mongoose');
require('dotenv').config();

async function testConnection() {
    try {
        console.log('üîó –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB Atlas...');
        
        await mongoose.connect(process.env.MONGODB_URI, {
            useNewUrlParser: true,
            useUnifiedTopology: true,
        });
        
        console.log('‚úÖ –£—Å–ø—ñ—à–Ω–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ MongoDB Atlas!');
        console.log('üìä –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö:', mongoose.connection.db.databaseName);
        console.log('üè† –•–æ—Å—Ç:', mongoose.connection.host);
        
        await mongoose.connection.close();
        console.log('üîå –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç–æ');
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è:', error.message);
        console.log('\nüí° –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ:');
        console.log('1. –ß–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ø–∞—Ä–æ–ª—å –≤ MONGODB_URI');
        console.log('2. –ß–∏ –¥–æ–¥–∞–Ω–∞ –≤–∞—à–∞ IP –≤ IP Access List –≤ Atlas');
        console.log('3. –ß–∏ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–∏–π –∫–ª–∞—Å—Ç–µ—Ä –≤ Atlas');
    }
}

testConnection();