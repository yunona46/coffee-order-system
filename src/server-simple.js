const express = require('express');

const PORT = 3000;
const HOST = '127.0.0.1';

const app = express();

// CORS
app.use((req, res, next) => {
  res.header('Access-Control-Allow-Origin', '*');
  res.header('Access-Control-Allow-Headers', '*');
  res.header('Access-Control-Allow-Methods', '*');
  next();
});

app.use(express.json());

// Health check
app.get('/api/v1/health', (req, res) => {
  res.json({
    success: true,
    message: '‚úÖ –°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î!',
    timestamp: new Date().toISOString()
  });
});

// –ú–µ–Ω—é
app.get('/api/v1/menu', (req, res) => {
  res.json({
    success: true,
    data: {
      items: [
        {
          id: "1",
          name: "–ï—Å–ø—Ä–µ—Å–æ",
          description: "–ö–ª–∞—Å–∏—á–Ω–∏–π –º—ñ—Ü–Ω–∏–π –µ—Å–ø—Ä–µ—Å–æ",
          category: "espresso",
          price: 35,
          available: true
        },
        {
          id: "2",
          name: "–õ–∞—Ç—Ç–µ", 
          description: "–ù—ñ–∂–Ω–∏–π –Ω–∞–ø—ñ–π –∑ –µ—Å–ø—Ä–µ—Å–æ —Ç–∞ –º–æ–ª–æ–∫–æ–º",
          category: "latte",
          price: 45,
          available: true
        }
      ]
    }
  });
});

// –ê–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è - –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è
app.post('/api/v1/auth/register', (req, res) => {
  const { firstName, lastName, email, password, phone } = req.body;
  
  const user = {
    id: Date.now(),
    firstName: firstName,
    lastName: lastName,
    email: email,
    role: 'customer'
  };
  
  res.json({
    success: true,
    message: '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π!',
    data: {
      user: user,
      accessToken: 'temp-token-' + Date.now()
    }
  });
});

// –ê–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è - –õ–æ–≥—ñ–Ω
app.post('/api/v1/auth/login', (req, res) => {
  const { email, password } = req.body;
  
  const user = {
    id: 1,
    firstName: '–ê–Ω–Ω–∞',
    lastName: '–Ü–≤–∞–Ω–æ–≤–∞',
    email: email,
    role: 'customer'
  };
  
  res.json({
    success: true,
    message: '–£—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥!',
    data: {
      user: user,
      accessToken: 'temp-token-' + Date.now()
    }
  });
});

// –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
app.post('/api/v1/orders', (req, res) => {
  try {
    const { items, customerName, customerEmail, customerPhone, orderType, notes } = req.body;
    
    // –í–∞–ª—ñ–¥–∞—Ü—ñ—è
    if (!items || !customerName || !customerEmail) {
      return res.status(400).json({
        success: false,
        message: '–ó–∞–ø–æ–≤–Ω—ñ—Ç—å –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è'
      });
    }
    
    // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Å—É–º–∏
    const totalAmount = items.reduce((sum, item) => {
      return sum + (item.price * item.quantity);
    }, 0);
    
    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    const order = {
      orderNumber: 'ORDER-' + Date.now(),
      customerName: customerName,
      customerEmail: customerEmail,
      customerPhone: customerPhone || '',
      items: items,
      totalAmount: totalAmount,
      orderType: orderType || 'pickup',
      status: 'pending',
      notes: notes || '',
      createdAt: new Date()
    };
    
    res.status(201).json({
      success: true,
      message: '–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω–æ!',
      data: { order: order }
    });
    
  } catch (error) {
    res.status(500).json({
      success: false,
      message: '–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    });
  }
});

// –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å
app.get('/api/v1/orders', (req, res) => {
  res.json({
    success: true,
    data: {
      orders: []
    }
  });
});

// 404
app.use('*', (req, res) => {
  res.status(404).json({
    success: false,
    message: '–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'
  });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, HOST, () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î –Ω–∞ http://${HOST}:${PORT}`);
  console.log('‚úÖ API –≥–æ—Ç–æ–≤–µ –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è!');
});